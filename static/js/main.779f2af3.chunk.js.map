{"version":3,"sources":["CalcForm.js","TagMember.js","App.js","index.js"],"names":["CalcForm","members","useState","location","setA","totalCost","setB","checked","setChecked","data","setData","columns","property","header","Text","primary","showTable","setShowTable","Form","FormField","name","value","onChange","target","label","type","Box","height","overflow","style","position","display","CheckBox","length","indeterminate","event","map","item","key","indexOf","e","filter","align","pad","direction","gap","Button","icon","TableAdd","plain","Table","onClick","cost","arr","d","push","Math","round","DataTable","step","allSuggestions","Tag","children","onRemove","rest","tag","background","horizontal","vertical","margin","size","right","FormClose","color","TagInput","onAdd","React","currentTag","setCurrentTag","box","setBox","boxRef","useCallback","onAddTag","Keyboard","onEnter","ref","wrap","v","index","flex","minWidth","TextInput","dropTarget","onSelect","stopPropagation","suggestion","TagMember","memberUpdate","selectedTags","setSelectedTags","suggestions","setSuggestions","placeholder","removeIndex","newTags","splice","toLowerCase","onFilterSuggestion","theme","global","colors","brand","font","family","AppBar","props","justify","left","elevation","zIndex","App","showSidebar","setShowSidebar","setMembers","Grommet","full","ResponsiveContext","Consumer","fill","Heading","level","Calculator","Layer","Collapsible","open","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.779f2af3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Button, CheckBox, Form, FormField, TextArea, Text, DataTable } from 'grommet';\r\nimport { Table, TableAdd } from 'grommet-icons';\r\n\r\nfunction CalcForm({members}) {\r\n    const [location, setA] = useState('');\r\n    const [totalCost, setB] = useState(0);\r\n    const [checked, setChecked] = useState([]);\r\n    // const members = memberList;\r\n    // [\r\n    //     '김선균',\r\n    //     '명재환',\r\n    //     '양석우',\r\n    //     '유근영',\r\n    //     '유수혁',\r\n    //     '윤성현',\r\n    //     '장태양',\r\n    //     '최기석',\r\n    // ];\r\n\r\n    const [text, setText] = useState(' ');\r\n    const [data, setData] = useState([]);\r\n    const columns = [\r\n        { property: 'name', header: <Text>이름</Text>, primary: true },\r\n        { property: 'location', header: '장소' },\r\n        { property: 'cost', header: '비용' },\r\n    ];\r\n    const [showTable, setShowTable] = useState(false);\r\n\r\n    function handleChangeA({ target }) {\r\n        setA(target.value);\r\n    }\r\n\r\n    function handleChangeB({ target }) {\r\n        setB(target.value);\r\n    }\r\n\r\n    function toSave() {\r\n        let cost = totalCost / checked.length;\r\n        let arr = [];\r\n        checked.map(d => {\r\n            arr.push({\r\n                name: d,\r\n                location: location,\r\n                cost: Math.round(cost),\r\n            });\r\n        });\r\n        setShowTable(true);\r\n        setData(arr);\r\n    }\r\n\r\n    function onCheckAll(event) {\r\n        if (event.target.checked) {\r\n            setChecked(members);\r\n        } else {\r\n            setChecked([]);\r\n        }\r\n    }\r\n\r\n    function onCheck(event, value) {\r\n        if (event.target.checked) {\r\n            setChecked([...checked, value]);\r\n        } else {\r\n            setChecked(checked.filter(item => item !== value));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <FormField name=\"location\" value={location} onChange={handleChangeA} label=\"장소\" />\r\n                <FormField\r\n                    name=\"totalCost\"\r\n                    value={totalCost}\r\n                    onChange={handleChangeB}\r\n                    label=\"총금액\"\r\n                    type=\"number\"\r\n                />\r\n                <Box\r\n                    height=\"120px\"\r\n                    overflow=\"auto\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        display: 'block',\r\n                    }}\r\n                >\r\n                    <CheckBox\r\n                        checked={checked.length === 8}\r\n                        indeterminate={checked.length > 0 && checked.length < 8}\r\n                        label=\"All\"\r\n                        onChange={onCheckAll}\r\n                    />\r\n                    {members.map(item => (\r\n                        <CheckBox\r\n                            key={item}\r\n                            checked={checked.indexOf(item) !== -1}\r\n                            label={item}\r\n                            onChange={e => onCheck(e, item)}\r\n                        />\r\n                    ))}\r\n                </Box>\r\n                <Box align=\"righit\" pad=\"large\" direction=\"row\" gap=\"small\">\r\n                    <Button icon={<TableAdd />} plain={false} />\r\n                    <Button primary icon={<Table />} plain={false} onClick={toSave} />\r\n                </Box>\r\n            </Form>\r\n            {/* <TextArea value={text} /> */}\r\n            {showTable ? (\r\n                <Box align=\"center\" pad=\"large\">\r\n                    <DataTable columns={columns} data={data} step={10} />\r\n                </Box>\r\n            ) : (\r\n                ''\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalcForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Box, Button, Keyboard, Text, TextInput } from 'grommet';\r\nimport { FormClose } from 'grommet-icons';\r\n\r\nconst allSuggestions = ['김선균','명재환','양석우','유근영','유수혁','윤성현','장태양','최기석'];\r\n\r\nconst Tag = ({ children, onRemove, ...rest }) => {\r\n    const tag = (\r\n        <Box\r\n            direction=\"row\"\r\n            align=\"center\"\r\n            background=\"brand\"\r\n            pad={{ horizontal: 'xsmall', vertical: 'xxsmall' }}\r\n            margin={{ vertical: 'xxsmall' }}\r\n            round=\"medium\"\r\n            {...rest}\r\n        >\r\n            <Text size=\"xsmall\" margin={{ right: 'xxsmall' }}>\r\n                {children}\r\n            </Text>\r\n            {onRemove && <FormClose size=\"small\" color=\"white\" />}\r\n        </Box>\r\n    );\r\n\r\n    if (onRemove) {\r\n        return <Button onClick={onRemove}>{tag}</Button>;\r\n    }\r\n    return tag;\r\n};\r\n\r\nconst TagInput = ({ value = [], onAdd, onChange, onRemove, ...rest }) => {\r\n    const [currentTag, setCurrentTag] = React.useState('');\r\n    const [box, setBox] = React.useState();\r\n    const boxRef = React.useCallback(setBox, []);\r\n\r\n    const updateCurrentTag = event => {\r\n        setCurrentTag(event.target.value);\r\n        if (onChange) {\r\n            onChange(event);\r\n        }\r\n    };\r\n\r\n    const onAddTag = tag => {\r\n        if (onAdd) {\r\n            onAdd(tag);\r\n        }\r\n    };\r\n\r\n    const onEnter = () => {\r\n        if (currentTag.length) {\r\n            onAddTag(currentTag);\r\n            setCurrentTag('');\r\n        }\r\n    };\r\n\r\n    const renderValue = () =>\r\n        value.map((v, index) => (\r\n            <Tag margin=\"xxsmall\" key={`${v}${index + 0}`} onRemove={() => onRemove(v)}>\r\n                {v}\r\n            </Tag>\r\n        ));\r\n\r\n    return (\r\n        <Keyboard onEnter={onEnter}>\r\n            <Box\r\n                direction=\"row\"\r\n                align=\"center\"\r\n                pad={{ horizontal: 'xsmall' }}\r\n                ref={boxRef}\r\n                wrap\r\n            >\r\n                {value.length > 0 && renderValue()}\r\n                <Box flex style={{ minWidth: '120px' }}>\r\n                    <TextInput\r\n                        type=\"search\"\r\n                        plain\r\n                        dropTarget={box}\r\n                        {...rest}\r\n                        onChange={updateCurrentTag}\r\n                        value={currentTag}\r\n                        onSelect={event => {\r\n                            event.stopPropagation();\r\n                            onAddTag(event.suggestion);\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Keyboard>\r\n    );\r\n};\r\n\r\nconst TagMember = ({members,memberUpdate}) => {\r\n    const [selectedTags, setSelectedTags] = React.useState(members);\r\n    const [suggestions, setSuggestions] = React.useState(allSuggestions);\r\n\r\n    const onRemoveTag = tag => {\r\n        const removeIndex = selectedTags.indexOf(tag);\r\n        const newTags = [...selectedTags];\r\n        if (removeIndex >= 0) {\r\n            newTags.splice(removeIndex, 1);\r\n        }\r\n        setSelectedTags(newTags);\r\n    };\r\n\r\n    const onAddTag = tag => setSelectedTags([...selectedTags, tag]);\r\n\r\n    const onFilterSuggestion = value =>\r\n        setSuggestions(\r\n            allSuggestions.filter(\r\n                suggestion => suggestion.toLowerCase().indexOf(value.toLowerCase()) >= 0,\r\n            ),\r\n        );\r\n\r\n    return (\r\n                <TagInput\r\n                    placeholder=\"참석자 추가\"\r\n                    suggestions={suggestions}\r\n                    value={selectedTags}\r\n                    onRemove={onRemoveTag}\r\n                    onAdd={onAddTag}\r\n                    onChange={({ target: { value } }) => onFilterSuggestion(value)}\r\n                    memberUpdate={memberUpdate(selectedTags)}\r\n                />\r\n    );\r\n};\r\n\r\nexport default TagMember;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, Collapsible, Heading, Grommet, Layer, ResponsiveContext } from 'grommet';\r\nimport { FormClose, Calculator } from 'grommet-icons';\r\nimport CalcForm from './CalcForm';\r\nimport TagMember from './TagMember.js';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#228BE6',\r\n        },\r\n        font: {\r\n            family: 'Jua',\r\n            size: '20px',\r\n            height: '20px',\r\n        },\r\n    },\r\n};\r\n\r\nconst AppBar = props => (\r\n    <Box\r\n        tag=\"header\"\r\n        direction=\"row\"\r\n        align=\"center\"\r\n        justify=\"between\"\r\n        background=\"brand\"\r\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n        elevation=\"medium\"\r\n        style={{ zIndex: '1' }}\r\n        {...props}\r\n    />\r\n);\r\n\r\n// const members = ['김선균','명재환','양석우','유근영','유수혁','윤성현','장태양','최기석'];\r\n\r\nfunction App() {\r\n    const [showSidebar, setShowSidebar] = useState(false);\r\n    const [members, setMembers] =  useState([]);\r\n    const memberUpdate = (v) => setMembers(v);\r\n\r\n    return (\r\n        <Grommet theme={theme} full>\r\n            <ResponsiveContext.Consumer>\r\n                {size => (\r\n                    <Box fill>\r\n                        <AppBar>\r\n                            <Heading level=\"2\" margin=\"none\">\r\n                                회식비 계산\r\n                            </Heading>\r\n                            <Button\r\n                                icon={<Calculator />}\r\n                                onClick={() => setShowSidebar(!showSidebar)}\r\n                            />\r\n                        </AppBar>\r\n                        <Box direction=\"row\" flex overflow={{ horizontal: 'hidden' }}>\r\n                            <Box flex align=\"center\" justify=\"center\">\r\n                                <TagMember members={members} memberUpdate={memberUpdate}/>\r\n                                <CalcForm members={members}/>\r\n                            </Box>\r\n                            {!showSidebar || size !== 'small' ? (\r\n                                <Collapsible direction=\"horizontal\" open={showSidebar}>\r\n                                    <Box\r\n                                        flex\r\n                                        width=\"medium\"\r\n                                        background=\"light-2\"\r\n                                        elevation=\"small\"\r\n                                        align=\"center\"\r\n                                        justify=\"center\"\r\n                                    >\r\n                                        sidebar1\r\n                                    </Box>\r\n                                </Collapsible>\r\n                            ) : (\r\n                                <Layer>\r\n                                    <Box\r\n                                        background=\"light-2\"\r\n                                        tag=\"header\"\r\n                                        justify=\"end\"\r\n                                        align=\"center\"\r\n                                        direction=\"row\"\r\n                                    >\r\n                                        <Button\r\n                                            icon={<FormClose size=\"large\" />}\r\n                                            onClick={() => setShowSidebar(false)}\r\n                                        />\r\n                                    </Box>\r\n                                    <Box fill background=\"light-2\" align=\"center\" justify=\"center\">\r\n                                        sidebar2\r\n                                    </Box>\r\n                                </Layer>\r\n                            )}\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n            </ResponsiveContext.Consumer>\r\n        </Grommet>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}