{"version":3,"sources":["CalcForm.js","App.js","index.js"],"names":["CalcForm","useState","location","setA","totalCost","setB","checked","setChecked","members","setText","Form","FormField","name","value","onChange","target","label","type","Box","direction","gap","CheckBox","length","indeterminate","event","map","item","key","indexOf","e","filter","Button","hoverIndicator","icon","Add","onClick","theme","global","colors","brand","font","family","size","height","AppBar","props","tag","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","App","showSidebar","setShowSidebar","Grommet","full","ResponsiveContext","Consumer","fill","Heading","level","margin","Calculator","flex","overflow","horizontal","Layer","FormClose","Collapsible","open","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bc1a835.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Button, CheckBox, Form, FormField } from 'grommet';\r\nimport { Add } from 'grommet-icons';\r\n\r\nfunction CalcForm() {\r\n    const [location, setA] = useState('');\r\n    const [totalCost, setB] = useState(0);\r\n    const [checked, setChecked] = useState([]);\r\n    const members = [\r\n        '김선균',\r\n        '명재환',\r\n        '양석우',\r\n        '유근영',\r\n        '유수혁',\r\n        '윤성현',\r\n        '장태양',\r\n        '최기석',\r\n    ];\r\n\r\n    const [text, setText] = useState(' ');\r\n\r\n    function handleChangeA({ target }) {\r\n        setA(target.value);\r\n    }\r\n\r\n    function handleChangeB({ target }) {\r\n        setB(target.value);\r\n    }\r\n\r\n    function toSave() {\r\n        setText(`${location} : ${totalCost}`);\r\n    }\r\n\r\n    function onCheckAll(event) {\r\n        if (event.target.checked) {\r\n            setChecked(members);\r\n        } else {\r\n            setChecked([]);\r\n        }\r\n    }\r\n\r\n    function onCheck(event, value) {\r\n        if (event.target.checked) {\r\n            setChecked([...checked, value]);\r\n        } else {\r\n            setChecked(checked.filter(item => item !== value));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <FormField name=\"location\" value={location} onChange={handleChangeA} label=\"장소\" />\r\n                <FormField\r\n                    name=\"totalCost\"\r\n                    value={totalCost}\r\n                    onChange={handleChangeB}\r\n                    label=\"총금액\"\r\n                    type=\"number\"\r\n                />\r\n                <Box direction=\"row\" gap=\"medium\">\r\n                    <CheckBox\r\n                        checked={checked.length === 8}\r\n                        indeterminate={checked.length > 0 && checked.length < 8}\r\n                        label=\"All\"\r\n                        onChange={onCheckAll}\r\n                    />\r\n                    {members.map(item => (\r\n                        <CheckBox\r\n                            key={item}\r\n                            checked={checked.indexOf(item) !== -1}\r\n                            label={item}\r\n                            onChange={e => onCheck(e, item)}\r\n                        />\r\n                    ))}\r\n                </Box>\r\n                <Button hoverIndicator icon={<Add />} onClick={toSave} />\r\n            </Form>\r\n            <textarea value={checked} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalcForm;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, Collapsible, Heading, Grommet, Layer, ResponsiveContext } from 'grommet';\r\nimport { FormClose, Calculator } from 'grommet-icons';\r\nimport CalcForm from './CalcForm';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#228BE6',\r\n        },\r\n        font: {\r\n            family: 'Jua',\r\n            size: '20px',\r\n            height: '20px',\r\n        },\r\n    },\r\n};\r\n\r\nconst AppBar = props => (\r\n    <Box\r\n        tag=\"header\"\r\n        direction=\"row\"\r\n        align=\"center\"\r\n        justify=\"between\"\r\n        background=\"brand\"\r\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n        elevation=\"medium\"\r\n        style={{ zIndex: '1' }}\r\n        {...props}\r\n    />\r\n);\r\n\r\nfunction App() {\r\n    const [showSidebar, setShowSidebar] = useState(false);\r\n\r\n    return (\r\n        <Grommet theme={theme} full>\r\n            <ResponsiveContext.Consumer>\r\n                {size => (\r\n                    <Box fill>\r\n                        <AppBar>\r\n                            <Heading level=\"2\" margin=\"none\">\r\n                                회식비 계산\r\n                            </Heading>\r\n                            <Button\r\n                                icon={<Calculator />}\r\n                                onClick={() => setShowSidebar(!showSidebar)}\r\n                            />\r\n                        </AppBar>\r\n                        <Box direction=\"row\" flex overflow={{ horizontal: 'hidden' }}>\r\n                            <Box flex align=\"center\" justify=\"center\">\r\n                                <CalcForm />\r\n                            </Box>\r\n                            {!showSidebar || size !== 'small' ? (\r\n                                <Collapsible direction=\"horizontal\" open={showSidebar}>\r\n                                    <Box\r\n                                        flex\r\n                                        width=\"medium\"\r\n                                        background=\"light-2\"\r\n                                        elevation=\"small\"\r\n                                        align=\"center\"\r\n                                        justify=\"center\"\r\n                                    >\r\n                                        sidebar1\r\n                                    </Box>\r\n                                </Collapsible>\r\n                            ) : (\r\n                                <Layer>\r\n                                    <Box\r\n                                        background=\"light-2\"\r\n                                        tag=\"header\"\r\n                                        justify=\"end\"\r\n                                        align=\"center\"\r\n                                        direction=\"row\"\r\n                                    >\r\n                                        <Button\r\n                                            icon={<FormClose size=\"large\" />}\r\n                                            onClick={() => setShowSidebar(false)}\r\n                                        />\r\n                                    </Box>\r\n                                    <Box fill background=\"light-2\" align=\"center\" justify=\"center\">\r\n                                        sidebar2\r\n                                    </Box>\r\n                                </Layer>\r\n                            )}\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n            </ResponsiveContext.Consumer>\r\n        </Grommet>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}