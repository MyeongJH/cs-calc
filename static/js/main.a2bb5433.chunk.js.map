{"version":3,"sources":["CalcForm.js","TagMember.js","App.js","index.js"],"names":["CalcForm","members","useState","location","setA","totalCost","setB","checked","setChecked","data","setData","columns","property","header","Text","primary","showTable","setShowTable","showNotice","setNotice","notiText","setNotiText","Form","FormField","name","value","onChange","target","label","type","Box","height","overflow","style","position","display","CheckBox","length","event","map","item","key","indexOf","e","filter","align","pad","direction","gap","Button","icon","TableAdd","plain","Table","onClick","text","toNoti","cost","arr","forEach","d","push","Math","round","toSave","DataTable","step","split","line","allSuggestions","Tag","children","onRemove","rest","tag","background","horizontal","vertical","margin","size","right","FormClose","color","TagInput","onAdd","React","currentTag","setCurrentTag","box","setBox","boxRef","useCallback","onAddTag","Keyboard","onEnter","ref","wrap","justify","v","index","flex","minWidth","TextInput","dropTarget","onSelect","stopPropagation","suggestion","TagMember","memberUpdate","selectedTags","setSelectedTags","suggestions","setSuggestions","placeholder","removeIndex","newTags","splice","toLowerCase","onFilterSuggestion","theme","global","colors","brand","font","family","AppBar","props","left","elevation","zIndex","App","showSidebar","setShowSidebar","setMembers","Grommet","full","ResponsiveContext","Consumer","Heading","level","Calculator","Layer","fill","Collapsible","open","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2bb5433.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Button, CheckBox, Form, FormField, Text, DataTable } from 'grommet';\r\nimport { Table, TableAdd } from 'grommet-icons';\r\n\r\nfunction CalcForm({members}) {\r\n    const [location, setA] = useState('');\r\n    const [totalCost, setB] = useState(0);\r\n    const [checked, setChecked] = useState([]);\r\n    // const members = memberList;\r\n    // [\r\n    //     '김선균',\r\n    //     '명재환',\r\n    //     '양석우',\r\n    //     '유근영',\r\n    //     '유수혁',\r\n    //     '윤성현',\r\n    //     '장태양',\r\n    //     '최기석',\r\n    // ];\r\n\r\n    const [data, setData] = useState([]);\r\n    const columns = [\r\n        { property: 'name', header: <Text>이름</Text>, primary: true },\r\n        { property: 'location', header: '장소' },\r\n        { property: 'cost', header: '비용' },\r\n    ];\r\n    const [showTable, setShowTable] = useState(false);\r\n    const [showNotice, setNotice] = useState(false);\r\n    const [notiText, setNotiText] = useState('');\r\n\r\n    function handleChangeA({ target }) {\r\n        setA(target.value);\r\n    }\r\n\r\n    function handleChangeB({ target }) {\r\n        setB(target.value);\r\n    }\r\n\r\n    function toShow() {\r\n        if (checked.length === 0) {\r\n            toNoti();\r\n            setShowTable(false);\r\n            setNotice(true);\r\n        } else {\r\n            toSave();\r\n            setShowTable(true);\r\n            setNotice(false);\r\n        }\r\n    }\r\n\r\n    function toSave() {\r\n        let cost = totalCost / checked.length;\r\n        let arr = [];\r\n        checked.forEach(d => {\r\n            arr.push({\r\n                name: d,\r\n                location: location,\r\n                cost: Math.round(cost),\r\n            });\r\n        });\r\n        setData(arr);\r\n    }\r\n\r\n    function toNoti() {\r\n        let text = '참석자를 선택해주세요.\\n';\r\n        if (location === '') {\r\n            text += '장소를 미입력했습니다.\\n'\r\n        }\r\n        if (totalCost === 0) {\r\n            text += '금액을 미입력했습니다.\\n'\r\n        }\r\n        setNotiText(text);\r\n    }\r\n\r\n    function onCheckAll(event) {\r\n        if (event.target.checked) {\r\n            setChecked(members);\r\n        } else {\r\n            setChecked([]);\r\n        }\r\n    }\r\n\r\n    function onCheck(event, value) {\r\n        if (event.target.checked) {\r\n            setChecked([...checked, value]);\r\n        } else {\r\n            setChecked(checked.filter(item => item !== value));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <FormField name=\"location\" value={location} onChange={handleChangeA} label=\"장소\" />\r\n                <FormField\r\n                    name=\"totalCost\"\r\n                    value={totalCost}\r\n                    onChange={handleChangeB}\r\n                    label=\"총금액\"\r\n                    type=\"number\"\r\n                />\r\n                <Box\r\n                    height=\"120px\"\r\n                    overflow=\"auto\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        display: 'block',\r\n                    }}\r\n                >\r\n                    <CheckBox\r\n                        checked={checked.length > 0}\r\n                        //indeterminate={checked.length > 0 && checked.length < 8}\r\n                        label=\"All\"\r\n                        onChange={onCheckAll}\r\n                    />\r\n                    {members.map(item => (\r\n                        <CheckBox\r\n                            key={item}\r\n                            checked={checked.indexOf(item) !== -1}\r\n                            label={item}\r\n                            onChange={e => onCheck(e, item)}\r\n                        />\r\n                    ))}\r\n                </Box>\r\n                <Box align=\"center\" pad=\"large\" direction=\"row\" gap=\"small\">\r\n                    <Button icon={<TableAdd />} plain={false} />\r\n                    <Button primary icon={<Table />} plain={false} onClick={toShow} />\r\n                </Box>\r\n            </Form>\r\n            {showTable ? (\r\n                <Box align=\"center\" pad=\"large\">\r\n                    <DataTable columns={columns} data={data} step={10} />\r\n                </Box>\r\n            ) : (\r\n                ''\r\n            )}\r\n            {showNotice ? (\r\n                <Box align=\"center\" pad=\"large\">\r\n                    {notiText.split('\\n').map(line => {\r\n                        return (<span>{line}</span>);\r\n                    })}\r\n                </Box>\r\n            ) : (\r\n                ''\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalcForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Box, Button, Keyboard, Text, TextInput } from 'grommet';\r\nimport { FormClose } from 'grommet-icons';\r\n\r\nconst allSuggestions = ['김선균','명재환','양석우','유근영','유수혁','윤성현','장태양','최기석'];\r\n\r\nconst Tag = ({ children, onRemove, ...rest }) => {\r\n    const tag = (\r\n        <Box\r\n            direction=\"row\"\r\n            align=\"center\"\r\n            background=\"brand\"\r\n            pad={{ horizontal: 'xsmall', vertical: 'xxsmall' }}\r\n            margin={{ vertical: 'xxsmall' }}\r\n            round=\"medium\"\r\n            {...rest}\r\n        >\r\n            <Text size=\"xsmall\" margin={{ right: 'xxsmall' }}>\r\n                {children}\r\n            </Text>\r\n            {onRemove && <FormClose size=\"small\" color=\"white\" />}\r\n        </Box>\r\n    );\r\n\r\n    if (onRemove) {\r\n        return <Button onClick={onRemove}>{tag}</Button>;\r\n    }\r\n    return tag;\r\n};\r\n\r\nconst TagInput = ({ value = [], onAdd, onChange, onRemove, ...rest }) => {\r\n    const [currentTag, setCurrentTag] = React.useState('');\r\n    const [box, setBox] = React.useState();\r\n    const boxRef = React.useCallback(setBox, []);\r\n\r\n    const updateCurrentTag = event => {\r\n        setCurrentTag(event.target.value);\r\n        if (onChange) {\r\n            onChange(event);\r\n        }\r\n    };\r\n\r\n    const onAddTag = tag => {\r\n        if (onAdd) {\r\n            onAdd(tag);\r\n        }\r\n    };\r\n\r\n    const onEnter = () => {\r\n        if (currentTag.length) {\r\n            onAddTag(currentTag);\r\n            setCurrentTag('');\r\n        }\r\n    };\r\n\r\n    const renderValue = () =>\r\n        value.map((v, index) => (\r\n            <Tag margin=\"xxsmall\" key={`${v}${index + 0}`} onRemove={() => onRemove(v)}>\r\n                {v}\r\n            </Tag>\r\n        ));\r\n\r\n    return (\r\n        <Keyboard onEnter={onEnter}>\r\n            <Box\r\n                direction=\"column\"\r\n                align=\"center\"\r\n                pad={{ horizontal: 'xsmall' }}\r\n                ref={boxRef}\r\n                wrap>\r\n                <Box justify=\"center\" direction=\"row\" align=\"center\"\r\n                    pad={{ horizontal: 'xsmall' }} wrap>\r\n                    {value.length > 0 && renderValue()}\r\n                </Box>                    \r\n                <Box \r\n                    flex style={{ minWidth: '120px' }}\r\n                    direction=\"row\">\r\n                    <TextInput\r\n                        type=\"search\"\r\n                        plain\r\n                        dropTarget={box}\r\n                        {...rest}\r\n                        onChange={updateCurrentTag}\r\n                        value={currentTag}\r\n                        onSelect={event => {\r\n                            event.stopPropagation();\r\n                            onAddTag(event.suggestion);\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Keyboard>\r\n    );\r\n};\r\n\r\nconst TagMember = ({members,memberUpdate}) => {\r\n    const [selectedTags, setSelectedTags] = React.useState(members);\r\n    const [suggestions, setSuggestions] = React.useState(allSuggestions);\r\n\r\n    const onRemoveTag = tag => {\r\n        const removeIndex = selectedTags.indexOf(tag);\r\n        const newTags = [...selectedTags];\r\n        if (removeIndex >= 0) {\r\n            newTags.splice(removeIndex, 1);\r\n        }\r\n        setSelectedTags(newTags);\r\n    };\r\n\r\n    const onAddTag = tag => {\r\n        if (selectedTags.indexOf(tag) == -1)\r\n            setSelectedTags([...selectedTags, tag])\r\n    };\r\n\r\n    const onFilterSuggestion = value =>\r\n        setSuggestions(\r\n            allSuggestions.filter(\r\n                suggestion => suggestion.toLowerCase().indexOf(value.toLowerCase()) >= 0,\r\n            ),\r\n        );\r\n\r\n    return (\r\n                <TagInput\r\n                    placeholder=\"참석자 추가\"\r\n                    suggestions={suggestions}\r\n                    value={selectedTags}\r\n                    onRemove={onRemoveTag}\r\n                    onAdd={onAddTag}\r\n                    onChange={({ target: { value } }) => onFilterSuggestion(value)}\r\n                    memberUpdate={memberUpdate(selectedTags)}\r\n                />\r\n    );\r\n};\r\n\r\nexport default TagMember;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, Collapsible, Heading, Grommet, Layer, ResponsiveContext } from 'grommet';\r\nimport { FormClose, Calculator } from 'grommet-icons';\r\nimport CalcForm from './CalcForm';\r\nimport TagMember from './TagMember.js';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#228BE6',\r\n        },\r\n        font: {\r\n            family: 'Jua',\r\n            size: '20px',\r\n            height: '20px',\r\n        },\r\n    },\r\n};\r\n\r\nconst AppBar = props => (\r\n    <Box\r\n        tag=\"header\"\r\n        direction=\"row\"\r\n        align=\"center\"\r\n        justify=\"between\"\r\n        background=\"brand\"\r\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n        elevation=\"medium\"\r\n        style={{ zIndex: '1' }}\r\n        {...props}\r\n    />\r\n);\r\n\r\n// const members = ['김선균','명재환','양석우','유근영','유수혁','윤성현','장태양','최기석'];\r\n\r\nfunction App() {\r\n    const [showSidebar, setShowSidebar] = useState(false);\r\n    const [members, setMembers] =  useState([]);\r\n    const memberUpdate = (v) => setMembers(v);\r\n\r\n    return (\r\n        <Grommet theme={theme} full>\r\n            <ResponsiveContext.Consumer>\r\n                {size => (\r\n                    <Box>\r\n                        <AppBar>\r\n                            <Heading level=\"2\" margin=\"none\">\r\n                                회식비 계산\r\n                            </Heading>\r\n                            <Button\r\n                                icon={<Calculator />}\r\n                                onClick={() => setShowSidebar(!showSidebar)}\r\n                            />\r\n                        </AppBar>\r\n                        <Box direction=\"row\" flex overflow={{ horizontal: 'hidden' }}>\r\n                            <Box flex align=\"center\" justify=\"center\">\r\n                                <TagMember members={members} memberUpdate={memberUpdate}/>\r\n                                <CalcForm members={members}/>\r\n                            </Box>\r\n                            {!showSidebar || size !== 'small' ? (\r\n                                <Collapsible direction=\"horizontal\" open={showSidebar}>\r\n                                    <Box\r\n                                        flex\r\n                                        width=\"medium\"\r\n                                        background=\"light-2\"\r\n                                        elevation=\"small\"\r\n                                        align=\"center\"\r\n                                        justify=\"center\"\r\n                                    >\r\n                                        sidebar1\r\n                                    </Box>\r\n                                </Collapsible>\r\n                            ) : (\r\n                                <Layer>\r\n                                    <Box\r\n                                        background=\"light-2\"\r\n                                        tag=\"header\"\r\n                                        justify=\"end\"\r\n                                        align=\"center\"\r\n                                        direction=\"row\"\r\n                                    >\r\n                                        <Button\r\n                                            icon={<FormClose size=\"large\" />}\r\n                                            onClick={() => setShowSidebar(false)}\r\n                                        />\r\n                                    </Box>\r\n                                    <Box fill background=\"light-2\" align=\"center\" justify=\"center\">\r\n                                        sidebar2\r\n                                    </Box>\r\n                                </Layer>\r\n                            )}\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n            </ResponsiveContext.Consumer>\r\n        </Grommet>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}